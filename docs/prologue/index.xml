<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prologue on</title><link>/docs/prologue/</link><description>Recent content in Prologue on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/docs/prologue/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>/docs/prologue/introduction/</guid><description>Get started There are two main ways to get started with Doks:
Tutorial ðŸ‘‰ The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial â†’ Quick Start ðŸ‘‰ The Quick Start is intended for intermediate to advanced users. One page summary of how to start a new Doks project. Quick Start â†’
Go further Recipes, Reference Guides, Extensions, and Showcase.</description></item><item><title>Quick Start</title><link>/docs/prologue/quick-start/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>/docs/prologue/quick-start/</guid><description>Requirements Doks uses npm to centralize dependency management, making it easy to update resources, build tooling, plugins, and build scripts:
Download and install Node.js (it includes npm) for your platform. ðŸ‘‰ Check that you minimally have installed the latest long term support (LTS) version of Node.js, by running node -v in your terminal. Start a new Doks project Create a new site, change directories, install dependencies, and start development server.</description></item><item><title>Commands</title><link>/docs/prologue/commands/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>/docs/prologue/commands/</guid><description>ðŸ’¡ You can change the commands in the scripts section of `./package.json`. create Create new content for your site:
npm run create [path] [flags] See also the Hugo docs: hugo new.
lint Check scripts, styles, and markdown for errors:
npm run lint scripts Check scripts for errors:
npm run lint:scripts [-- --fix] styles Check styles for errors:
npm run lint:styles [-- --fix] markdown Check markdown for errors:</description></item><item><title>Directory Structure</title><link>/docs/prologue/directory-structure/</link><pubDate>Mon, 20 Apr 2020 14:14:16 +0200</pubDate><guid>/docs/prologue/directory-structure/</guid><description>. â”œâ”€â”€ archetypes/ â”œâ”€â”€ assets/ â”œâ”€â”€ config/ â”œâ”€â”€ content/ â”œâ”€â”€ data/ â”œâ”€â”€ layouts/ â”œâ”€â”€ static/ â”œâ”€â”€ .eslintignore â”œâ”€â”€ .eslintrc.json â”œâ”€â”€ .markdownlint.json â”œâ”€â”€ .markdownlintignore â”œâ”€â”€ .stylelintignore â”œâ”€â”€ .stylelintrc.json â”œâ”€â”€ babel.config.js â”œâ”€â”€ netlify.toml â””â”€â”€ package.json See also the Hugo docs: Directory Structure.
Root directories archetypes .. â”œâ”€â”€ blog.md â”œâ”€â”€ default.md â””â”€â”€ docs.md See also: Archetypes.
assets .. â”œâ”€â”€ fonts/ â”œâ”€â”€ images/ â”œâ”€â”€ js/ â”‚ â”œâ”€â”€ vendor/ â”‚ â””â”€â”€ app.js â”œâ”€â”€ lambda/ â””â”€â”€ scss/ â”œâ”€â”€ common/ â”œâ”€â”€ components/ â”œâ”€â”€ layouts/ â”œâ”€â”€ vendor/ â””â”€â”€ app.</description></item></channel></rss>